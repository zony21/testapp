'.source.ts, .source.tsx':
  typeScriptReactClassComponent:
    prefix: 'tsrcc'
    body: '''
      import React, { Component } from 'react'

      interface Props {

      }
      interface State {

      }

      export default class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {
          state = {}

          render() {
              return (
                  <div>
                      $0
                  </div>
              )
          }
      }

    '''
    description: 'Creates a React component class with ES7 module system and TypeScript interfaces'
  typeScriptReactClassExportComponent:
    prefix: 'tsrce'
    body: '''
      import React, { Component } from 'react'

      interface Props {

      }
      interface State {

      }

      class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {
          state = {}

          render() {
              return (
                  <div>
                      $0
                  </div>
              )
          }
      }

      export default ${1:${TM_FILENAME_BASE}}

    '''
    description: 'Creates a React component class with ES7 module system and TypeScript interfaces'
  typeScriptReactFunctionalExportComponent:
    prefix: 'tsrfce'
    body: '''
      import React, { ReactElement } from 'react'

      interface Props {

      }

      function ${1:${TM_FILENAME_BASE}}({}: Props): ReactElement {
          return (
              <div>
                  $0
              </div>
          )
      }

      export default ${1:${TM_FILENAME_BASE}}

    '''
    description: 'Creates a React Functional Component with ES7 module system and TypeScript interface'
  typeScriptReactFunctionalComponent:
    prefix: 'tsrfc'
    body: '''
      import React, { ReactElement } from 'react'

      interface Props {

      }

      export default function ${1:${TM_FILENAME_BASE}}({}: Props): ReactElement {
          return (
              <div>
                  $0
              </div>
          )
      }

    '''
    description: 'Creates a React Functional Component with ES7 module system and TypeScript interface'
  typeScriptReactArrowFunctionExportComponent:
    prefix: 'tsrafce'
    body: '''
      import React from 'react'

      interface Props {

      }

      const ${1:${TM_FILENAME_BASE}} = (props: Props) => {
          return (
              <div>
                  $0
              </div>
          )
      }

      export default ${1:${TM_FILENAME_BASE}}

    '''
    description: 'Creates a React Arrow Function Component with ES7 module system and TypeScript interface'
  typeScriptReactClassPureComponent:
    prefix: 'tsrpc'
    body: '''
      import React, { PureComponent } from 'react'

      interface Props {

      }

      export default class ${1:${TM_FILENAME_BASE}} extends PureComponent<Props> {
          render() {
              return (
                  <div>
                      $0
                  </div>
              )
          }
      }

    '''
    description: 'Creates a React pure component class with ES7 module system and TypeScript interface'
  typeScriptReactClassExportPureComponent:
    prefix: 'tsrpce'
    body: '''
      import React, { PureComponent } from 'react'

      interface Props {

      }

      class ${1:${TM_FILENAME_BASE}} extends PureComponent<Props> {
          render() {
              return (
                  <div>
                      $0
                  </div>
              )
          }
      }

      export default ${1:${TM_FILENAME_BASE}}

    '''
    description: 'Creates a React pure component class with ES7 module system and TypeScript interface'
  typeScriptReactFunctionMemoComponent:
    prefix: 'tsrmc'
    body: '''
      import React, { memo } from 'react'

      interface Props {

      }

      export default memo(function ${1:${TM_FILENAME_BASE}}({}: Props) {
          return (
              <div>
                  $0
              </div>
          )
      })

    '''
    description: 'Creates a React Memo Function Component with ES7 module system and TypeScript interface'
  typeScriptReactClassCompomentRedux:
    prefix: 'tsrcredux'
    body: '''
      import React, { Component } from 'react'
      import { connect } from 'react-redux'

      interface Props {

      }
      interface State {

      }

      export class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {
          state = {}

          render() {
              return (
                  <div>
                      $0
                  </div>
              )
          }
      }

      const mapStateToProps = (state) => ({

      })

      const mapDispatchToProps = {

      }

      export default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})

    '''
    description: 'Creates a React component class with PropTypes with connected redux and ES7 module system and TypeScript interfaces'
  'Export interface':
    prefix: 'expint'
    body: 'export interface ${1:${TM_FILENAME_BASE}} {$0}'
  'Export type':
    prefix: 'exptp'
    body: 'export type ${1:${TM_FILENAME_BASE}} = {$0}'
